@model pittools.Models.Product

@{
    ViewBag.Title = string.Format("{0} | Товары | {1}", Model.Name, pittools.Constants.TITLE);
}

<script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>

<p>
    @{
        List<string> path = pittools.Helper.GetUrlPath(Request);

        if (path.Count == 2)
        {
            @Html.ActionLink("На главную", "Index", "Home")
            @pittools.Constants.BREADCRUMBS_SEPARATOR
            @Html.ActionLink("Товары", "GetShortName", new { shortname = string.Empty, page = Request.QueryString["page"] })
            @pittools.Constants.BREADCRUMBS_SEPARATOR
            @Model.Name
        }
        else if (path.Count == 3)
        {
            @Html.ActionLink("На главную", "Index", "Home")
            @pittools.Constants.BREADCRUMBS_SEPARATOR
            @Html.ActionLink("Производители", "GetShortName", "Manufacturer", new { shortname = string.Empty }, null)
            @pittools.Constants.BREADCRUMBS_SEPARATOR
            @Html.ActionLink(pittools.Service.Factory.ManufacturerServiceFactory.Create().Get(path[1]).Name, "GetShortName", "Manufacturer", new { shortname = path[1], page = Request.QueryString["page"] }, null)
            @pittools.Constants.BREADCRUMBS_SEPARATOR
            @Model.Name
        }
        else if (path.Count == 4 && path[0] == "catalog" && path[2] == "products")
        {
            pittools.Models.Category category = Model.CategoryProducts.Where(item => item.Category.ShortName == path[1]).Select(item => item.Category).FirstOrDefault();

            @Html.ActionLink("На главную", "Index", "Home")
            @pittools.Constants.BREADCRUMBS_SEPARATOR

            if (category != null)
            {
                @Html.ActionLink(category.Name, "GetShortName", "Category", new { shortname = category.ShortName }, null)
                @pittools.Constants.BREADCRUMBS_SEPARATOR
            }

            @Model.Name
        }
        else if (path.Count == 4 && path[0] == "catalog" && path[2] != "products")
        {
            pittools.Models.Collection collection = Model.CollectionProducts.Where(item => item.Collection.ShortName == path[2]).Select(item => item.Collection).FirstOrDefault();
            pittools.Models.Category category = collection == null ? null : collection.Category;

            @Html.ActionLink("Home", "Index", "Home")
            @pittools.Constants.BREADCRUMBS_SEPARATOR

            if (category != null)
            {
                @Html.ActionLink(category.Name, "GetShortName", "Category", new { shortname = category.ShortName }, null)
                @pittools.Constants.BREADCRUMBS_SEPARATOR
            }

            if (collection != null)
            {
                @Html.ActionLink(collection.Name, "GetCollectionInCategory", "Collection", new { category = collection.Category.ShortName, collection = collection.ShortName }, null)
                @pittools.Constants.BREADCRUMBS_SEPARATOR
            }

            @Model.Name
        }
    }
</p>

@if (Request.IsAuthenticated && (User.IsInRole(pittools.Constants.ROLE_ADMIN) || User.IsInRole(pittools.Constants.ROLE_CONTENT_MANAGER)))
{
    <p>@Html.ActionLink("Редактировать", "Edit", new { id = Model.ID, page = Request.QueryString["page"] })&nbsp;&nbsp;&nbsp;@Html.ActionLink("Удалить", "Delete", new { id = Model.ID, page = Request.QueryString["page"] })</p>
}
<h2>@Model.Name</h2>
<p><span style="font-weight:bold">Цена: </span>@Model.Price руб.</p>
<p><span style="font-weight:bold">Производитель: </span>@Model.Manufacturer.Name</p>
<p>@Model.Description</p>

@if (!string.IsNullOrWhiteSpace(Model.ImageExt))
{
    <div style="width:100%; text-align:center">
        <img src="@Url.Content("~/Content")/@(pittools.Constants.PRODUCT_IMAGES_FOLDER)/@Model.ID@Model.ImageExt.TrimEnd()?@DateTime.Now" alt="@Model.Name" />
    </div>
}
@if (Request.IsAuthenticated && (User.IsInRole(pittools.Constants.ROLE_ADMIN) || User.IsInRole(pittools.Constants.ROLE_CONTENT_MANAGER)))
{
    <h2>Загрузить картинку</h2>

    using (Html.BeginForm("UploadImage", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.Hidden("objID", Model.ID)

        <table>
            <tr>
                <td>
                    @{
                        string filename = string.Empty;
                        if (string.IsNullOrWhiteSpace(Model.ImageExt)) { filename = "0.jpg"; }
                        else { filename = string.Format("{0}{1}?{2}", Model.ID, Model.ImageExt.TrimEnd(), DateTime.Now); }
                    }
                    <img src="@Url.Content("~/Content")/@(pittools.Constants.PRODUCT_IMAGES_FOLDER)/@(pittools.Constants.PRODUCT_IMAGES_MINI_FOLDER)/@filename" alt="@Model.Name" />
                </td>
                <td style="padding-left:20px">
                    <input type="file" name="imagefile" />
                    <br />
                    <input type="submit" value="Загрузить" />
                </td>
            </tr>
        </table>
    }

    <h2>Категории</h2>

    if (Model.CategoryProducts.Count > 0)
    {
        <table>
            @foreach (var item in Model.CategoryProducts.OrderBy(item => item.Category.Name))
            {
                <tr>
                    <td>@item.Category.Name</td>
                    <td style="padding-left:20px">@Html.ActionLink("Удалить", "DeleteExpress", "CategoryProduct", new { id = item.ID }, new { onclick = "javascript:return confirm('Вы уверены?');" })</td>
                </tr>
            }
        </table>
    }

    <h2>Добавить категорию</h2>

    using (Html.BeginForm("Add", "CategoryProduct", FormMethod.Post))
    {
        @Html.Hidden("ProductID", Model.ID)

        var queryCategories = (pittools.Service.Factory.CategoryServiceFactory.Create()).Get().Select(item => new { ID = item.ID, Name = item.Name }).ToList();
        var listCategories = queryCategories.Select(item => new SelectListItem() { Text = item.Name, Value = item.ID.ToString(), Selected = false }).ToList();
        @Html.DropDownList("CategoryID", listCategories, "...")

        <input type="submit" value="Добавить" />
    }

    <h2>Коллекции</h2>

    if (Model.CollectionProducts.Count > 0)
    {
        <table>
            @foreach (var item in Model.CollectionProducts.OrderBy(item => item.Collection.Name))
            {
                <tr>
                    <td>@item.Collection.Name</td>
                    <td style="padding-left:20px">@Html.ActionLink("Delete", "DeleteExpress", "CollectionProduct", new { id = item.ID }, new { onclick = "javascript:return confirm('Are you sure?');" })</td>
                </tr>
            }
        </table>
    }

    <h2>Добавить коллекцию</h2>
    using (Html.BeginForm("Add", "CollectionProduct", FormMethod.Post))
    {
        @Html.Hidden("ProductID", Model.ID)

        var queryCategories = (pittools.Service.Factory.CategoryServiceFactory.Create()).Get().Select(item => new { ID = item.ID, Name = item.Name }).ToList();
        var listCategories = queryCategories.Select(item => new SelectListItem() { Text = item.Name, Value = item.ID.ToString(), Selected = false }).ToList();
        @Html.DropDownList("CategoryID", listCategories, "...", new { onchange = "javascript:document.CollectionsListForm.CategoryID.value=this.value; document.CollectionsListForm.CollectionsListFormSubmit.click();" })

        <br />
        <div id="CollectionsList" style="display:inline">
            @{
                var listCollections = new List<SelectListItem>();
                @Html.Partial("_CollectionsList", listCollections)
            }
        </div>

        <input type="submit" value="Добавить" />

    }
    using (Ajax.BeginForm("CollectionsList", null, new AjaxOptions { UpdateTargetId = "CollectionsList" }, new { name = "CollectionsListForm" }))
    {
        @Html.Hidden("CategoryID", 0)
        <input type="submit" name="CollectionsListFormSubmit" style="display:none" />
    }
}
